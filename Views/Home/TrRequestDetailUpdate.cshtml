@{
    // View
    View = this;

    // Check action result
    if (trRequestDetailUpdate.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!trRequestDetailUpdate.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(trRequestDetailUpdate.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tr_request_detail: currentTable } });
var currentPageID = ew.PAGE_ID = "update";
var currentForm;
var ftr_request_detailupdate;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("ftr_request_detailupdate")
        .setPageId("update")

        // Add fields
        .setFields([

            ["id", [fields.id.visible && fields.id.required ? ew.Validators.required(fields.id.caption) : null], fields.id.isInvalid],
            ["request_id", [fields.request_id.visible && fields.request_id.required ? ew.Validators.fileRequired(fields.request_id.caption) : null], fields.request_id.isInvalid],
            ["Item_No", [fields.Item_No.visible && fields.Item_No.required ? ew.Validators.required(fields.Item_No.caption) : null], fields.Item_No.isInvalid],
            ["Part_No", [fields.Part_No.visible && fields.Part_No.required ? ew.Validators.required(fields.Part_No.caption) : null], fields.Part_No.isInvalid],
            ["Part_Description", [fields.Part_Description.visible && fields.Part_Description.required ? ew.Validators.required(fields.Part_Description.caption) : null], fields.Part_Description.isInvalid],
            ["Qty", [fields.Qty.visible && fields.Qty.required ? ew.Validators.required(fields.Qty.caption) : null], fields.Qty.isInvalid],
            ["SAP_Unit_Price", [fields.SAP_Unit_Price.visible && fields.SAP_Unit_Price.required ? ew.Validators.required(fields.SAP_Unit_Price.caption) : null], fields.SAP_Unit_Price.isInvalid],
            ["Extd_SAP_Price", [fields.Extd_SAP_Price.visible && fields.Extd_SAP_Price.required ? ew.Validators.required(fields.Extd_SAP_Price.caption) : null], fields.Extd_SAP_Price.isInvalid],
            ["GP_SAP_Price", [fields.GP_SAP_Price.visible && fields.GP_SAP_Price.required ? ew.Validators.required(fields.GP_SAP_Price.caption) : null], fields.GP_SAP_Price.isInvalid],
            ["Override_Unit_Price", [fields.Override_Unit_Price.visible && fields.Override_Unit_Price.required ? ew.Validators.required(fields.Override_Unit_Price.caption) : null, ew.Validators.float, ew.Validators.selected], fields.Override_Unit_Price.isInvalid],
            ["Extd_Override_Price", [fields.Extd_Override_Price.visible && fields.Extd_Override_Price.required ? ew.Validators.required(fields.Extd_Override_Price.caption) : null], fields.Extd_Override_Price.isInvalid],
            ["GP_Override_Price", [fields.GP_Override_Price.visible && fields.GP_Override_Price.required ? ew.Validators.required(fields.GP_Override_Price.caption) : null], fields.GP_Override_Price.isInvalid],
            ["Override_Core", [fields.Override_Core.visible && fields.Override_Core.required ? ew.Validators.required(fields.Override_Core.caption) : null], fields.Override_Core.isInvalid],
            ["Override_Percent", [fields.Override_Percent.visible && fields.Override_Percent.required ? ew.Validators.required(fields.Override_Percent.caption) : null], fields.Override_Percent.isInvalid],
            ["Core_Life_Ind", [fields.Core_Life_Ind.visible && fields.Core_Life_Ind.required ? ew.Validators.required(fields.Core_Life_Ind.caption) : null], fields.Core_Life_Ind.isInvalid],
            ["Notes", [fields.Notes.visible && fields.Notes.required ? ew.Validators.required(fields.Notes.caption) : null], fields.Notes.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@trRequestDetailUpdate.ShowPageHeader()
@trRequestDetailUpdate.ShowMessages()
<form name="ftr_request_detailupdate" id="ftr_request_detailupdate" class="@(trRequestDetailUpdate.FormClassName)" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@Convert.ToInt32(trRequestDetailUpdate.IsModal)">
@foreach (string recordKey in trRequestDetailUpdate.RecordKeys) {
<input type="hidden" name="key_m[]" value="@recordKey">
}
<div id="tbl_tr_request_detailupdate" class="ew-update-div"><!-- page -->
    @if (!trRequestDetailUpdate.IsConfirm) { // Confirm page
    <div class="form-check">
        <input type="checkbox" class="form-check-input" name="u" id="u" data-ew-action="select-all" ><label class="form-check-label" for="u">@Html.Raw(Language.Phrase("SelectAll"))</label>
    </div>
    }
@if (trRequestDetailUpdate.Override_Unit_Price.Visible && (!trRequestDetailUpdate.IsConfirm || trRequestDetailUpdate.Override_Unit_Price.MultiUpdateSelected)) { // trRequestDetailUpdate.Override_Unit_Price.Visible (begin)
    <div id="r_Override_Unit_Price" @Html.Raw(trRequestDetailUpdate.Override_Unit_Price.RowAttributes)>
        <label for="x_Override_Unit_Price" class="@(trRequestDetailUpdate.LeftColumnClass)">
            <div class="form-check">
                <input type="checkbox" name="u_Override_Unit_Price" id="u_Override_Unit_Price" class="form-check-input ew-multi-select" value="1"@(trRequestDetailUpdate.Override_Unit_Price.MultiUpdateSelected ? " checked" : "")>
                <label class="form-check-label" for="u_Override_Unit_Price">@Html.Raw(trRequestDetailUpdate.Override_Unit_Price.Caption)</label>
            </div>
        </label>
        <div class="@(trRequestDetailUpdate.RightColumnClass)">
            <div @Html.Raw(trRequestDetailUpdate.Override_Unit_Price.CellAttributes)>
                <span id="el_tr_request_detail_Override_Unit_Price">
                <input type="@(trRequestDetailUpdate.Override_Unit_Price.InputTextType)" name="x_Override_Unit_Price" id="x_Override_Unit_Price" data-table="tr_request_detail" data-field="x_Override_Unit_Price" value="@Html.Raw(trRequestDetailUpdate.Override_Unit_Price.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestDetailUpdate.Override_Unit_Price.PlaceHolder))" data-format-pattern="@(trRequestDetailUpdate.Override_Unit_Price.FormatPattern)"@Html.Raw(trRequestDetailUpdate.Override_Unit_Price.EditAttributes) aria-describedby="x_Override_Unit_Price_help">
                @Html.Raw(trRequestDetailUpdate.Override_Unit_Price.GetCustomMessage)
                <div class="invalid-feedback">@Html.Raw(trRequestDetailUpdate.Override_Unit_Price.GetErrorMessage())</div>
                </span>
            </div>
        </div>
    </div>
} @* trRequestDetailUpdate.Override_Unit_Price.Visible (end) *@
</div><!-- /page -->
@Html.Raw(trRequestDetailUpdate.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(trRequestDetailUpdate.OffsetColumnClass)"><!-- buttons offset -->
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="ftr_request_detailupdate">@Html.Raw(Language.Phrase("UpdateBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="ftr_request_detailupdate"data-href="@AppPath(trRequestDetailUpdate.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
    </div><!-- /buttons offset -->
@Html.Raw(trRequestDetailUpdate.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@trRequestDetailUpdate.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("tr_request_detail");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
