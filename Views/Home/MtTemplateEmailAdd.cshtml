@{
    // View
    View = this;

    // Check action result
    if (mtTemplateEmailAdd.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtTemplateEmailAdd.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(mtTemplateEmailAdd.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { mt_template_email: currentTable } });
var currentPageID = ew.PAGE_ID = "add";
var currentForm;
var fmt_template_emailadd;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fmt_template_emailadd")
        .setPageId("add")

        // Add fields
        .setFields([

            ["id", [fields.id.visible && fields.id.required ? ew.Validators.required(fields.id.caption) : null, ew.Validators.integer], fields.id.isInvalid],
            ["Template_Type", [fields.Template_Type.visible && fields.Template_Type.required ? ew.Validators.required(fields.Template_Type.caption) : null], fields.Template_Type.isInvalid],
            ["Template_Name", [fields.Template_Name.visible && fields.Template_Name.required ? ew.Validators.required(fields.Template_Name.caption) : null], fields.Template_Name.isInvalid],
            ["Template_Body", [fields.Template_Body.visible && fields.Template_Body.required ? ew.Validators.required(fields.Template_Body.caption) : null], fields.Template_Body.isInvalid],
            ["Template_Description", [fields.Template_Description.visible && fields.Template_Description.required ? ew.Validators.required(fields.Template_Description.caption) : null], fields.Template_Description.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@mtTemplateEmailAdd.ShowPageHeader()
@mtTemplateEmailAdd.ShowMessages()
<form name="fmt_template_emailadd" id="fmt_template_emailadd" class="@(mtTemplateEmailAdd.FormClassName)" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="insert">
<input type="hidden" name="modal" value="@ConvertToInt(mtTemplateEmailAdd.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(mtTemplateEmailAdd.OldKeyName)" value="@Html.Raw(mtTemplateEmailAdd.OldKey)">
<div class="ew-add-div"><!-- page* -->
@if (mtTemplateEmailAdd.id.Visible) { // mtTemplateEmailAdd.id.Visible (begin)
    <div id="r_id" @Html.Raw(mtTemplateEmailAdd.id.RowAttributes)>
        <label id="elh_mt_template_email_id" for="x_id" class="@(mtTemplateEmailAdd.LeftColumnClass)">@Html.Raw(mtTemplateEmailAdd.id.Caption)@Html.Raw(mtTemplateEmailAdd.id.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtTemplateEmailAdd.RightColumnClass)"><div @Html.Raw(mtTemplateEmailAdd.id.CellAttributes)>
<span id="el_mt_template_email_id">
<input type="@(mtTemplateEmailAdd.id.InputTextType)" name="x_id" id="x_id" data-table="mt_template_email" data-field="x_id" value="@Html.Raw(mtTemplateEmailAdd.id.EditValue)" size="30" placeholder="@Html.Raw(HtmlEncode(mtTemplateEmailAdd.id.PlaceHolder))" data-format-pattern="@(mtTemplateEmailAdd.id.FormatPattern)"@Html.Raw(mtTemplateEmailAdd.id.EditAttributes) aria-describedby="x_id_help">
@Html.Raw(mtTemplateEmailAdd.id.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtTemplateEmailAdd.id.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtTemplateEmailAdd.id.Visible (end) *@
@if (mtTemplateEmailAdd.Template_Type.Visible) { // mtTemplateEmailAdd.Template_Type.Visible (begin)
    <div id="r_Template_Type" @Html.Raw(mtTemplateEmailAdd.Template_Type.RowAttributes)>
        <label id="elh_mt_template_email_Template_Type" for="x_Template_Type" class="@(mtTemplateEmailAdd.LeftColumnClass)">@Html.Raw(mtTemplateEmailAdd.Template_Type.Caption)@Html.Raw(mtTemplateEmailAdd.Template_Type.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtTemplateEmailAdd.RightColumnClass)"><div @Html.Raw(mtTemplateEmailAdd.Template_Type.CellAttributes)>
<span id="el_mt_template_email_Template_Type">
<input type="@(mtTemplateEmailAdd.Template_Type.InputTextType)" name="x_Template_Type" id="x_Template_Type" data-table="mt_template_email" data-field="x_Template_Type" value="@Html.Raw(mtTemplateEmailAdd.Template_Type.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(mtTemplateEmailAdd.Template_Type.PlaceHolder))" data-format-pattern="@(mtTemplateEmailAdd.Template_Type.FormatPattern)"@Html.Raw(mtTemplateEmailAdd.Template_Type.EditAttributes) aria-describedby="x_Template_Type_help">
@Html.Raw(mtTemplateEmailAdd.Template_Type.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtTemplateEmailAdd.Template_Type.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtTemplateEmailAdd.Template_Type.Visible (end) *@
@if (mtTemplateEmailAdd.Template_Name.Visible) { // mtTemplateEmailAdd.Template_Name.Visible (begin)
    <div id="r_Template_Name" @Html.Raw(mtTemplateEmailAdd.Template_Name.RowAttributes)>
        <label id="elh_mt_template_email_Template_Name" for="x_Template_Name" class="@(mtTemplateEmailAdd.LeftColumnClass)">@Html.Raw(mtTemplateEmailAdd.Template_Name.Caption)@Html.Raw(mtTemplateEmailAdd.Template_Name.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtTemplateEmailAdd.RightColumnClass)"><div @Html.Raw(mtTemplateEmailAdd.Template_Name.CellAttributes)>
<span id="el_mt_template_email_Template_Name">
<input type="@(mtTemplateEmailAdd.Template_Name.InputTextType)" name="x_Template_Name" id="x_Template_Name" data-table="mt_template_email" data-field="x_Template_Name" value="@Html.Raw(mtTemplateEmailAdd.Template_Name.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(mtTemplateEmailAdd.Template_Name.PlaceHolder))" data-format-pattern="@(mtTemplateEmailAdd.Template_Name.FormatPattern)"@Html.Raw(mtTemplateEmailAdd.Template_Name.EditAttributes) aria-describedby="x_Template_Name_help">
@Html.Raw(mtTemplateEmailAdd.Template_Name.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtTemplateEmailAdd.Template_Name.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtTemplateEmailAdd.Template_Name.Visible (end) *@
@if (mtTemplateEmailAdd.Template_Body.Visible) { // mtTemplateEmailAdd.Template_Body.Visible (begin)
    <div id="r_Template_Body" @Html.Raw(mtTemplateEmailAdd.Template_Body.RowAttributes)>
        <label id="elh_mt_template_email_Template_Body" for="x_Template_Body" class="@(mtTemplateEmailAdd.LeftColumnClass)">@Html.Raw(mtTemplateEmailAdd.Template_Body.Caption)@Html.Raw(mtTemplateEmailAdd.Template_Body.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtTemplateEmailAdd.RightColumnClass)"><div @Html.Raw(mtTemplateEmailAdd.Template_Body.CellAttributes)>
<span id="el_mt_template_email_Template_Body">
<textarea data-table="mt_template_email" data-field="x_Template_Body" name="x_Template_Body" id="x_Template_Body" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(mtTemplateEmailAdd.Template_Body.PlaceHolder))"@Html.Raw(mtTemplateEmailAdd.Template_Body.EditAttributes) aria-describedby="x_Template_Body_help">@(mtTemplateEmailAdd.Template_Body.EditValue)</textarea>
@Html.Raw(mtTemplateEmailAdd.Template_Body.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtTemplateEmailAdd.Template_Body.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtTemplateEmailAdd.Template_Body.Visible (end) *@
@if (mtTemplateEmailAdd.Template_Description.Visible) { // mtTemplateEmailAdd.Template_Description.Visible (begin)
    <div id="r_Template_Description" @Html.Raw(mtTemplateEmailAdd.Template_Description.RowAttributes)>
        <label id="elh_mt_template_email_Template_Description" for="x_Template_Description" class="@(mtTemplateEmailAdd.LeftColumnClass)">@Html.Raw(mtTemplateEmailAdd.Template_Description.Caption)@Html.Raw(mtTemplateEmailAdd.Template_Description.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(mtTemplateEmailAdd.RightColumnClass)"><div @Html.Raw(mtTemplateEmailAdd.Template_Description.CellAttributes)>
<span id="el_mt_template_email_Template_Description">
<input type="@(mtTemplateEmailAdd.Template_Description.InputTextType)" name="x_Template_Description" id="x_Template_Description" data-table="mt_template_email" data-field="x_Template_Description" value="@Html.Raw(mtTemplateEmailAdd.Template_Description.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(mtTemplateEmailAdd.Template_Description.PlaceHolder))" data-format-pattern="@(mtTemplateEmailAdd.Template_Description.FormatPattern)"@Html.Raw(mtTemplateEmailAdd.Template_Description.EditAttributes) aria-describedby="x_Template_Description_help">
@Html.Raw(mtTemplateEmailAdd.Template_Description.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(mtTemplateEmailAdd.Template_Description.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* mtTemplateEmailAdd.Template_Description.Visible (end) *@
</div><!-- /page* -->
@{ mtTemplateEmailAdd.CloseRecordset(); }
@Html.Raw(mtTemplateEmailAdd.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(mtTemplateEmailAdd.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fmt_template_emailadd">@Html.Raw(Language.Phrase("AddBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fmt_template_emailadd" data-href="@AppPath(mtTemplateEmailAdd.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(mtTemplateEmailAdd.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@mtTemplateEmailAdd.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("mt_template_email");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
