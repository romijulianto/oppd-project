@{
    // View
    View = this;

    // Check action result
    if (mtBackupApproverList.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!mtBackupApproverList.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
@if (!mtBackupApproverList.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(mtBackupApproverList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { mt_backup_approver: currentTable } });
var currentPageID = ew.PAGE_ID = "list";
var currentForm;
var @(mtBackupApproverList.FormName);
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("@(mtBackupApproverList.FormName)")
        .setPageId("list")
        .setSubmitWithFetch(@(mtBackupApproverList.UseAjaxActions ? "true" : "false"))
        .setFormKeyCountName("@(mtBackupApproverList.FormKeyCountName)")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
ew.PREVIEW_SELECTOR = ".ew-preview-btn";
ew.PREVIEW_MODAL_CLASS = "modal modal-fullscreen-sm-down";
ew.PREVIEW_ROW = true;
ew.PREVIEW_SINGLE_ROW = false;
ew.PREVIEW || ew.ready("head", ew.PATH_BASE + "js/preview.min.js?v=20.6.0", "preview");
</script>
<script>
window.Tabulator || loadjs([
    ew.PATH_BASE + "js/tabulator.min.js?v=20.6.3",
    ew.PATH_BASE + "css/@CssFile("tabulator_bootstrap5.css", false)?v=20.6.3"
], "import");
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (!mtBackupApproverList.IsExport()) {
<div class="btn-toolbar ew-toolbar">
@if (mtBackupApproverList.TotalRecords > 0 && mtBackupApproverList.ExportOptions.Visible) {
    mtBackupApproverList.ExportOptions.Render("body");
}
@if (mtBackupApproverList.ImportOptions.Visible) {
    mtBackupApproverList.ImportOptions.Render("body");
}
@if (mtBackupApproverList.SearchOptions.Visible) {
    mtBackupApproverList.SearchOptions.Render("body");
}
@if (mtBackupApproverList.FilterOptions.Visible) {
    mtBackupApproverList.FilterOptions.Render("body");
}
</div>
}
@if (!mtBackupApproverList.IsModal) {
<form name="fmt_backup_approversrch" id="fmt_backup_approversrch" class="ew-form ew-ext-search-form" action="@AppPath(CurrentPageName())" novalidate autocomplete="off">
<div id="fmt_backup_approversrch_search_panel" class="mb-2 mb-sm-0 @(mtBackupApproverList.SearchPanelClass)"><!-- .ew-search-panel -->
<script>
var currentTable = @Html.Raw(ConvertToJson(mtBackupApproverList.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { mt_backup_approver: currentTable } });
var currentForm;
var fmt_backup_approversrch, currentSearchForm, currentAdvancedSearchForm;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery,
        fields = currentTable.fields;

    // Form object for search
    let form = new ew.FormBuilder()
        .setId("fmt_backup_approversrch")
        .setPageId("list")
@if (mtBackupApproverList.UseAjaxActions) {
        <text>.setSubmitWithFetch(true)</text>
}

        // Dynamic selection lists
        .setLists({
        })

        // Filters
        .setFilterList(@Html.Raw(await mtBackupApproverList.GetFilterList()))
        .build();
    window[form.id] = form;
    currentSearchForm = form;
    loadjs.done(form.id);
});
</script>
<input type="hidden" name="cmd" value="search">
@if (Security.CanSearch) {
if (!mtBackupApproverList.IsExport() && Empty(mtBackupApproverList.CurrentAction) && mtBackupApproverList.HasSearchFields()) { @* Show search form (begin) *@
<div class="ew-extended-search container-fluid ps-2">
<div class="row mb-0">
    <div class="col-sm-auto px-0 pe-sm-2">
        <div class="ew-basic-search input-group">
            <input type="search" name="@(Config.TableBasicSearch)" id="@(Config.TableBasicSearch)" class="form-control ew-basic-search-keyword" value="@Html.Raw(HtmlEncode(mtBackupApproverList.BasicSearch.SessionKeyword))" placeholder="@(HtmlEncode(Language.Phrase("Search")))" aria-label="@(HtmlEncode(Language.Phrase("Search")))">
            <input type="hidden" name="@(Config.TableBasicSearchType)" id="@(Config.TableBasicSearchType)" class="ew-basic-search-type" value="@(HtmlEncode(mtBackupApproverList.BasicSearch.SessionType))">
            <button type="button" data-bs-toggle="dropdown" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" aria-haspopup="true" aria-expanded="false">
                <span id="searchtype">@Html.Raw(mtBackupApproverList.BasicSearch.TypeNameShort)</span>
            </button>
            <div class="dropdown-menu dropdown-menu-end">
                <button type="button" class="dropdown-item@(mtBackupApproverList.BasicSearch.SessionType == "" ? " active" : "")" form="fmt_backup_approversrch" data-ew-action="search-type">@Html.Raw(Language.Phrase("QuickSearchAuto"))</button>
                <button type="button" class="dropdown-item@(mtBackupApproverList.BasicSearch.SessionType == "=" ? " active" : "")" form="fmt_backup_approversrch" data-ew-action="search-type" data-search-type="=">@Html.Raw(Language.Phrase("QuickSearchExact"))</button>
                <button type="button" class="dropdown-item@(mtBackupApproverList.BasicSearch.SessionType == "AND" ? " active" : "")" form="fmt_backup_approversrch" data-ew-action="search-type" data-search-type="AND">@Html.Raw(Language.Phrase("QuickSearchAll"))</button>
                <button type="button" class="dropdown-item@(mtBackupApproverList.BasicSearch.SessionType == "OR" ? " active" : "")" form="fmt_backup_approversrch" data-ew-action="search-type" data-search-type="OR">@Html.Raw(Language.Phrase("QuickSearchAny"))</button>
            </div>
        </div>
    </div>
    <div class="col-sm-auto mb-3">
        <button class="btn btn-primary" name="btn-submit" id="btn-submit" type="submit">@Html.Raw(Language.Phrase("SearchBtn"))</button>
    </div>
</div>
</div><!-- /.ew-extended-search -->
} @* Show search form (end) *@
}
</div><!-- /.ew-search-panel -->
</form>
}
@mtBackupApproverList.ShowPageHeader()
@mtBackupApproverList.ShowMessages()
<main class="list @(mtBackupApproverList.TotalRecords == 0 && !mtBackupApproverList.IsAdd ? " ew-no-record" : "")">
<div id="ew-list">
@if (mtBackupApproverList.TotalRecords > 0 || !Empty(mtBackupApproverList.CurrentAction)) {
<div class="card ew-card ew-grid@(mtBackupApproverList.IsAddOrEdit ? " ew-grid-add-edit" : "") @(mtBackupApproverList.TableGridClass)">
<form name="@(mtBackupApproverList.FormName)" id="@(mtBackupApproverList.FormName)" class="ew-form ew-list-form" action="@AppPath(mtBackupApproverList.PageName)" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
@if (mtBackupApproverList.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div id="gmp_mt_backup_approver" class="card-body ew-grid-middle-panel @(mtBackupApproverList.TableContainerClass)" style="@(mtBackupApproverList.TableContainerStyle)">
@if (mtBackupApproverList.TotalRecords > 0 || mtBackupApproverList.IsGridEdit || mtBackupApproverList.IsMultiEdit) {
<table id="tbl_mt_backup_approverlist" class="@(mtBackupApproverList.TableClass)"><!-- .ew-table -->
<thead>
    <tr class="ew-table-header">
@{
    // Header row
    mtBackupApproverList.RowType = RowType.Header;

    // Render list options
    await mtBackupApproverList.RenderListOptions();
}
@* Render list options (header, left) *@
@mtBackupApproverList.ListOptions.RenderHeader("left")
@if (mtBackupApproverList.id.Visible) { // mtBackupApproverList.id.Visible (begin)
        <th data-name="id" class="@(mtBackupApproverList.id.HeaderCellClass)"><div id="elh_mt_backup_approver_id" class="mt_backup_approver_id">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.id))</div></th>
} @* mtBackupApproverList.id.Visible (end) *@
@if (mtBackupApproverList._UserName.Visible) { // mtBackupApproverList._UserName.Visible (begin)
        <th data-name="_UserName" class="@(mtBackupApproverList._UserName.HeaderCellClass)"><div id="elh_mt_backup_approver__UserName" class="mt_backup_approver__UserName">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList._UserName))</div></th>
} @* mtBackupApproverList._UserName.Visible (end) *@
@if (mtBackupApproverList.Full_Name.Visible) { // mtBackupApproverList.Full_Name.Visible (begin)
        <th data-name="Full_Name" class="@(mtBackupApproverList.Full_Name.HeaderCellClass)"><div id="elh_mt_backup_approver_Full_Name" class="mt_backup_approver_Full_Name">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Full_Name))</div></th>
} @* mtBackupApproverList.Full_Name.Visible (end) *@
@if (mtBackupApproverList.Position.Visible) { // mtBackupApproverList.Position.Visible (begin)
        <th data-name="Position" class="@(mtBackupApproverList.Position.HeaderCellClass)"><div id="elh_mt_backup_approver_Position" class="mt_backup_approver_Position">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Position))</div></th>
} @* mtBackupApproverList.Position.Visible (end) *@
@if (mtBackupApproverList.Departement.Visible) { // mtBackupApproverList.Departement.Visible (begin)
        <th data-name="Departement" class="@(mtBackupApproverList.Departement.HeaderCellClass)"><div id="elh_mt_backup_approver_Departement" class="mt_backup_approver_Departement">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Departement))</div></th>
} @* mtBackupApproverList.Departement.Visible (end) *@
@if (mtBackupApproverList.Division.Visible) { // mtBackupApproverList.Division.Visible (begin)
        <th data-name="Division" class="@(mtBackupApproverList.Division.HeaderCellClass)"><div id="elh_mt_backup_approver_Division" class="mt_backup_approver_Division">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Division))</div></th>
} @* mtBackupApproverList.Division.Visible (end) *@
@if (mtBackupApproverList.Area.Visible) { // mtBackupApproverList.Area.Visible (begin)
        <th data-name="Area" class="@(mtBackupApproverList.Area.HeaderCellClass)"><div id="elh_mt_backup_approver_Area" class="mt_backup_approver_Area">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Area))</div></th>
} @* mtBackupApproverList.Area.Visible (end) *@
@if (mtBackupApproverList.Business_Area.Visible) { // mtBackupApproverList.Business_Area.Visible (begin)
        <th data-name="Business_Area" class="@(mtBackupApproverList.Business_Area.HeaderCellClass)"><div id="elh_mt_backup_approver_Business_Area" class="mt_backup_approver_Business_Area">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Business_Area))</div></th>
} @* mtBackupApproverList.Business_Area.Visible (end) *@
@if (mtBackupApproverList.Report_To.Visible) { // mtBackupApproverList.Report_To.Visible (begin)
        <th data-name="Report_To" class="@(mtBackupApproverList.Report_To.HeaderCellClass)"><div id="elh_mt_backup_approver_Report_To" class="mt_backup_approver_Report_To">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Report_To))</div></th>
} @* mtBackupApproverList.Report_To.Visible (end) *@
@if (mtBackupApproverList.Business_Area_Desc.Visible) { // mtBackupApproverList.Business_Area_Desc.Visible (begin)
        <th data-name="Business_Area_Desc" class="@(mtBackupApproverList.Business_Area_Desc.HeaderCellClass)"><div id="elh_mt_backup_approver_Business_Area_Desc" class="mt_backup_approver_Business_Area_Desc">@Html.Raw(mtBackupApproverList.RenderFieldHeader(mtBackupApproverList.Business_Area_Desc))</div></th>
} @* mtBackupApproverList.Business_Area_Desc.Visible (end) *@
@* Render list options (header, right) *@
@mtBackupApproverList.ListOptions.RenderHeader("right")
    </tr>
</thead>
<tbody data-page="@(mtBackupApproverList.PageNumber)">
@{
    await mtBackupApproverList.SetupGrid();
    bool eof = mtBackupApproverList.Recordset == null; // DN
}
@while (mtBackupApproverList.RecordCount < mtBackupApproverList.StopRecord || SameString(mtBackupApproverList.RowIndex, "$rowindex$")) { // Begin While
    if (!eof && !SameString(mtBackupApproverList.RowIndex, "$rowindex$") &&
        (!mtBackupApproverList.IsGridAdd || mtBackupApproverList.CurrentMode == "copy") &&
        (!((mtBackupApproverList.IsCopy || mtBackupApproverList.IsAdd) && mtBackupApproverList.RowIndex is int rowIndex && rowIndex == 0))) // DN
        eof = !await mtBackupApproverList.Recordset.ReadAsync();
    mtBackupApproverList.RecordCount++;
    if (mtBackupApproverList.RecordCount >= mtBackupApproverList.StartRecord) {
        await mtBackupApproverList.SetupRow();
    <tr @Html.Raw(mtBackupApproverList.RowAttributes)>
    @* Render list options (body, left) *@
    @mtBackupApproverList.ListOptions.RenderBody("left", mtBackupApproverList.RowCount)
    @if (mtBackupApproverList.id.Visible) { // mtBackupApproverList.id.Visible (begin)
        <td data-name="id" @Html.Raw(mtBackupApproverList.id.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_id" class="el_mt_backup_approver_id">
<span @Html.Raw(mtBackupApproverList.id.ViewAttributes)>
@Html.Raw(mtBackupApproverList.id.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.id.Visible (end) *@
    @if (mtBackupApproverList._UserName.Visible) { // mtBackupApproverList._UserName.Visible (begin)
        <td data-name="_UserName" @Html.Raw(mtBackupApproverList._UserName.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver__UserName" class="el_mt_backup_approver__UserName">
<span @Html.Raw(mtBackupApproverList._UserName.ViewAttributes)>
@Html.Raw(mtBackupApproverList._UserName.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList._UserName.Visible (end) *@
    @if (mtBackupApproverList.Full_Name.Visible) { // mtBackupApproverList.Full_Name.Visible (begin)
        <td data-name="Full_Name" @Html.Raw(mtBackupApproverList.Full_Name.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Full_Name" class="el_mt_backup_approver_Full_Name">
<span @Html.Raw(mtBackupApproverList.Full_Name.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Full_Name.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Full_Name.Visible (end) *@
    @if (mtBackupApproverList.Position.Visible) { // mtBackupApproverList.Position.Visible (begin)
        <td data-name="Position" @Html.Raw(mtBackupApproverList.Position.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Position" class="el_mt_backup_approver_Position">
<span @Html.Raw(mtBackupApproverList.Position.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Position.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Position.Visible (end) *@
    @if (mtBackupApproverList.Departement.Visible) { // mtBackupApproverList.Departement.Visible (begin)
        <td data-name="Departement" @Html.Raw(mtBackupApproverList.Departement.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Departement" class="el_mt_backup_approver_Departement">
<span @Html.Raw(mtBackupApproverList.Departement.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Departement.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Departement.Visible (end) *@
    @if (mtBackupApproverList.Division.Visible) { // mtBackupApproverList.Division.Visible (begin)
        <td data-name="Division" @Html.Raw(mtBackupApproverList.Division.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Division" class="el_mt_backup_approver_Division">
<span @Html.Raw(mtBackupApproverList.Division.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Division.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Division.Visible (end) *@
    @if (mtBackupApproverList.Area.Visible) { // mtBackupApproverList.Area.Visible (begin)
        <td data-name="Area" @Html.Raw(mtBackupApproverList.Area.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Area" class="el_mt_backup_approver_Area">
<span @Html.Raw(mtBackupApproverList.Area.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Area.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Area.Visible (end) *@
    @if (mtBackupApproverList.Business_Area.Visible) { // mtBackupApproverList.Business_Area.Visible (begin)
        <td data-name="Business_Area" @Html.Raw(mtBackupApproverList.Business_Area.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Business_Area" class="el_mt_backup_approver_Business_Area">
<span @Html.Raw(mtBackupApproverList.Business_Area.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Business_Area.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Business_Area.Visible (end) *@
    @if (mtBackupApproverList.Report_To.Visible) { // mtBackupApproverList.Report_To.Visible (begin)
        <td data-name="Report_To" @Html.Raw(mtBackupApproverList.Report_To.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Report_To" class="el_mt_backup_approver_Report_To">
<span @Html.Raw(mtBackupApproverList.Report_To.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Report_To.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Report_To.Visible (end) *@
    @if (mtBackupApproverList.Business_Area_Desc.Visible) { // mtBackupApproverList.Business_Area_Desc.Visible (begin)
        <td data-name="Business_Area_Desc" @Html.Raw(mtBackupApproverList.Business_Area_Desc.CellAttributes)>
<span id="el@(mtBackupApproverList.RowIndex == "$rowindex$" ? "$rowindex$" : mtBackupApproverList.RowCount)_mt_backup_approver_Business_Area_Desc" class="el_mt_backup_approver_Business_Area_Desc">
<span @Html.Raw(mtBackupApproverList.Business_Area_Desc.ViewAttributes)>
@Html.Raw(mtBackupApproverList.Business_Area_Desc.GetViewValue())</span>
</span>
</td>
    } @* mtBackupApproverList.Business_Area_Desc.Visible (end) *@
    @* Render list options (body, right) *@
    @mtBackupApproverList.ListOptions.RenderBody("right", mtBackupApproverList.RowCount)
    </tr>
    } @* End if *@

    // Reset for template row
    if (SameString(mtBackupApproverList.RowIndex, "$rowindex$"))
        mtBackupApproverList.RowIndex = 0;

    // Reset inline add/copy row
    if ((mtBackupApproverList.IsCopy || mtBackupApproverList.IsAdd) && mtBackupApproverList.RowIndex is int rowIndex2 && rowIndex2 == 0)
        mtBackupApproverList.RowIndex = 1;
} @* End While *@
</tbody>
</table><!-- /.ew-table -->
} @* End If TotalRecords > 0 *@
</div><!-- /.ew-grid-middle-panel -->
@if (Empty(mtBackupApproverList.CurrentAction) && !mtBackupApproverList.UseAjaxActions) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ mtBackupApproverList.CloseRecordset(); }
@if (!mtBackupApproverList.IsExport()) {
<div class="card-footer ew-grid-lower-panel">
@if (!mtBackupApproverList.IsGridAdd && !(mtBackupApproverList.IsGridEdit && mtBackupApproverList.ModalGridEdit) && !mtBackupApproverList.IsMultiEdit) {
@Html.Raw(mtBackupApproverList.Pager.Render())
}
<div class="ew-list-other-options">
@mtBackupApproverList.OtherOptions.RenderBody("bottom")
</div>
</div>
}
</div><!-- /.ew-grid -->
} else { // Show other options
<div class="ew-list-other-options">
@mtBackupApproverList.OtherOptions.ForEach(opt => opt.ButtonClass = "").RenderBody()
</div>
}
</div>
</main>
@mtBackupApproverList.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!mtBackupApproverList.IsExport()) {
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("mt_backup_approver");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
