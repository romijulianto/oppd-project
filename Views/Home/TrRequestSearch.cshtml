@{
    // View
    View = this;

    // Check action result
    if (trRequestSearch.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!trRequestSearch.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(trRequestSearch.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { tr_request: currentTable } });
var currentPageID = ew.PAGE_ID = "search";
var currentForm;
var ftr_requestsearch, currentSearchForm, currentAdvancedSearchForm;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery,
        fields = currentTable.fields;

    // Form object for search
    let form = new ew.FormBuilder()
        .setId("ftr_requestsearch")
        .setPageId("search")
@if (trRequestSearch.IsModal && trRequestSearch.UseAjaxActions) {
        <text>.setSubmitWithFetch(true)</text>
}

        // Add fields
        .setFields([

            ["id", [ew.Validators.integer], fields.id.isInvalid],
            ["y_id", [ew.Validators.between], false],
            ["Request_No", [], fields.Request_No.isInvalid],
            ["Reference_Doc", [], fields.Reference_Doc.isInvalid],
            ["Reason", [], fields.Reason.isInvalid],
            ["Request_By", [], fields.Request_By.isInvalid],
            ["Request_By_Name", [], fields.Request_By_Name.isInvalid],
            ["Request_By_Position", [], fields.Request_By_Position.isInvalid],
            ["Request_By_Branch", [], fields.Request_By_Branch.isInvalid],
            ["Request_By_Region", [], fields.Request_By_Region.isInvalid],
            ["Request_Industry", [], fields.Request_Industry.isInvalid],
            ["Customer_ID", [], fields.Customer_ID.isInvalid],
            ["Customer_Name", [], fields.Customer_Name.isInvalid],
            ["SAP_Total", [ew.Validators.float], fields.SAP_Total.isInvalid],
            ["Override_Total", [ew.Validators.float], fields.Override_Total.isInvalid],
            ["Variance_Total", [ew.Validators.float], fields.Variance_Total.isInvalid],
            ["Variance_Percent", [ew.Validators.float], fields.Variance_Percent.isInvalid],
            ["Notes", [], fields.Notes.isInvalid],
            ["Next_Approver", [], fields.Next_Approver.isInvalid],
            ["Request_PIC", [], fields.Request_PIC.isInvalid],
            ["Request_Status", [], fields.Request_Status.isInvalid],
            ["List_Approver", [], fields.List_Approver.isInvalid],
            ["Last_Update_By", [], fields.Last_Update_By.isInvalid],
            ["Created_By", [], fields.Created_By.isInvalid],
            ["Created_Date", [ew.Validators.datetime(fields.Created_Date.clientFormatPattern)], fields.Created_Date.isInvalid],
            ["Request_Currency", [], fields.Request_Currency.isInvalid]
        ])
        // Validate form
        .setValidate(
            async function () {
                if (!this.validateRequired)
                    return true; // Ignore validation
                let fobj = this.getForm();

                // Validate fields
                if (!this.validateFields())
                    return false;

                // Call Form_CustomValidate event
                if (!(await this.customValidate?.(fobj) ?? true)) {
                    this.focus();
                    return false;
                }
                return true;
            }
        )

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
            "Reason": @Html.Raw(trRequestSearch.Reason.ToClientList(trRequestSearch)),
            "Request_Status": @Html.Raw(trRequestSearch.Request_Status.ToClientList(trRequestSearch)),
        })
        .build();
    window[form.id] = form;
@if (trRequestSearch.IsModal) {
    <text>currentAdvancedSearchForm = form;</text>
} else {
    <text>currentForm = form;</text>
}
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@trRequestSearch.ShowPageHeader()
@trRequestSearch.ShowMessages()
<form name="ftr_requestsearch" id="ftr_requestsearch" class="@(trRequestSearch.FormClassName)" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="search">
@if (trRequestSearch.IsModal) {
<input type="hidden" name="modal" value="1">
}
<div class="ew-multi-page"><!-- multi-page -->
<div class="ew-nav@(trRequestSearch.MultiPages.ContainerClasses)" id="pages_trRequestSearch"><!-- multi-page tabs -->
    <ul class="@(trRequestSearch.MultiPages.NavClasses)" role="tablist">
        <li class="nav-item"><button class="@(trRequestSearch.MultiPages.NavLinkClasses(1))" data-bs-target="#tab_tr_request1" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tr_request1" aria-selected="@(ConvertToJson(trRequestSearch.MultiPages.IsActive(1)))">@Html.Raw(trRequestSearch.PageCaption(1))</button></li>
        <li class="nav-item"><button class="@(trRequestSearch.MultiPages.NavLinkClasses(2))" data-bs-target="#tab_tr_request2" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tr_request2" aria-selected="@(ConvertToJson(trRequestSearch.MultiPages.IsActive(2)))">@Html.Raw(trRequestSearch.PageCaption(2))</button></li>
        <li class="nav-item"><button class="@(trRequestSearch.MultiPages.NavLinkClasses(3))" data-bs-target="#tab_tr_request3" data-bs-toggle="tab" type="button" role="tab" aria-controls="tab_tr_request3" aria-selected="@(ConvertToJson(trRequestSearch.MultiPages.IsActive(3)))">@Html.Raw(trRequestSearch.PageCaption(3))</button></li>
    </ul>
    <div class="@(trRequestSearch.MultiPages.TabContentClasses)"><!-- multi-page tabs .tab-content -->
        <div class="@(trRequestSearch.MultiPages.TabPaneClasses(1))" id="tab_tr_request1" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-search-div"><!-- page* -->
@if (trRequestSearch.id.Visible) { // trRequestSearch.id.Visible (begin)
    <div id="r_id" class="row" @Html.Raw(trRequestSearch.id.RowAttributes)>
        <label for="x_id" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_id">@Html.Raw(trRequestSearch.id.Caption)</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.id.CellAttributes)>
                <div class="d-flex align-items-start">
                    <span class="ew-search-operator">
<select name="z_id" id="z_id" class="form-select ew-operator-select" data-ew-action="search-operator">
@foreach (string opr in trRequestSearch.id.SearchOperators) {
<option value="@opr" selected="@SameText(trRequestSearch.id.AdvancedSearch.SearchOperator, opr)">@Html.Raw(Language.Phrase(opr == "=" ? "EQUAL" : opr))</option>
}
</select>
</span>
                <span id="el_tr_request_id" class="ew-search-field">
<input type="@(trRequestSearch.id.InputTextType)" name="x_id" id="x_id" data-table="tr_request" data-field="x_id" value="@Html.Raw(trRequestSearch.id.EditValue)" data-page="1" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.id.PlaceHolder))" data-format-pattern="@(trRequestSearch.id.FormatPattern)"@Html.Raw(trRequestSearch.id.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.id.GetErrorMessage(false))</div>
</span>
                    <span class="ew-search-and d-none"><label>@Html.Raw(Language.Phrase("AND"))</label></span>
                    <span id="el2_tr_request_id" class="ew-search-field2 d-none">
<input type="@(trRequestSearch.id.InputTextType)" name="y_id" id="y_id" data-table="tr_request" data-field="x_id" value="@Html.Raw(trRequestSearch.id.EditValue2)" data-page="1" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.id.PlaceHolder))" data-format-pattern="@(trRequestSearch.id.FormatPattern)"@Html.Raw(trRequestSearch.id.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.id.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.id.Visible (end) *@
@if (trRequestSearch.Request_No.Visible) { // trRequestSearch.Request_No.Visible (begin)
    <div id="r_Request_No" class="row" @Html.Raw(trRequestSearch.Request_No.RowAttributes)>
        <label for="x_Request_No" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_No">@Html.Raw(trRequestSearch.Request_No.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_No" id="z_Request_No" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_No.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_No" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_No.InputTextType)" name="x_Request_No" id="x_Request_No" data-table="tr_request" data-field="x_Request_No" value="@Html.Raw(trRequestSearch.Request_No.EditValue)" data-page="1" size="30" maxlength="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_No.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_No.FormatPattern)"@Html.Raw(trRequestSearch.Request_No.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_No.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_No.Visible (end) *@
@if (trRequestSearch.Reference_Doc.Visible) { // trRequestSearch.Reference_Doc.Visible (begin)
    <div id="r_Reference_Doc" class="row" @Html.Raw(trRequestSearch.Reference_Doc.RowAttributes)>
        <label for="x_Reference_Doc" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Reference_Doc">@Html.Raw(trRequestSearch.Reference_Doc.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Reference_Doc" id="z_Reference_Doc" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Reference_Doc.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Reference_Doc" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Reference_Doc.InputTextType)" name="x_Reference_Doc" id="x_Reference_Doc" data-table="tr_request" data-field="x_Reference_Doc" value="@Html.Raw(trRequestSearch.Reference_Doc.EditValue)" data-page="1" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Reference_Doc.PlaceHolder))" data-format-pattern="@(trRequestSearch.Reference_Doc.FormatPattern)"@Html.Raw(trRequestSearch.Reference_Doc.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Reference_Doc.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Reference_Doc.Visible (end) *@
@if (trRequestSearch.Reason.Visible) { // trRequestSearch.Reason.Visible (begin)
    <div id="r_Reason" class="row" @Html.Raw(trRequestSearch.Reason.RowAttributes)>
        <label for="x_Reason" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Reason">@Html.Raw(trRequestSearch.Reason.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Reason" id="z_Reason" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Reason.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Reason" class="ew-search-field ew-search-field-single">
    <select
        id="x_Reason"
        name="x_Reason"
        class="form-select ew-select@(trRequestSearch.Reason.IsInvalidClass)"
        data-select2-id="ftr_requestsearch_x_Reason"
        data-table="tr_request"
        data-field="x_Reason"
        data-page="1"
        data-value-separator="@(trRequestSearch.Reason.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(trRequestSearch.Reason.PlaceHolder))"
        @Html.Raw(trRequestSearch.Reason.EditAttributes)>
        @(trRequestSearch.Reason.SelectOptionListHtml("x_Reason"))
    </select>
    <div class="invalid-feedback">@Html.Raw(trRequestSearch.Reason.GetErrorMessage(false))</div>
@Html.Raw(trRequestSearch.Reason.Lookup.GetParamTag(trRequestSearch, "p_x_Reason"))
<script>
loadjs.ready("ftr_requestsearch", function() {
    var options = { name: "x_Reason", selectId: "ftr_requestsearch_x_Reason" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftr_requestsearch.lists.Reason?.lookupOptions.length) {
        options.data = { id: "x_Reason", form: "ftr_requestsearch" };
    } else {
        options.ajax = { id: "x_Reason", form: "ftr_requestsearch", limit: 5 };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tr_request.fields.Reason.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Reason.Visible (end) *@
@if (trRequestSearch.Customer_ID.Visible) { // trRequestSearch.Customer_ID.Visible (begin)
    <div id="r_Customer_ID" class="row" @Html.Raw(trRequestSearch.Customer_ID.RowAttributes)>
        <label for="x_Customer_ID" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Customer_ID">@Html.Raw(trRequestSearch.Customer_ID.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Customer_ID" id="z_Customer_ID" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Customer_ID.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Customer_ID" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Customer_ID.InputTextType)" name="x_Customer_ID" id="x_Customer_ID" data-table="tr_request" data-field="x_Customer_ID" value="@Html.Raw(trRequestSearch.Customer_ID.EditValue)" data-page="1" size="30" maxlength="20" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Customer_ID.PlaceHolder))" data-format-pattern="@(trRequestSearch.Customer_ID.FormatPattern)"@Html.Raw(trRequestSearch.Customer_ID.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Customer_ID.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Customer_ID.Visible (end) *@
@if (trRequestSearch.Customer_Name.Visible) { // trRequestSearch.Customer_Name.Visible (begin)
    <div id="r_Customer_Name" class="row" @Html.Raw(trRequestSearch.Customer_Name.RowAttributes)>
        <label for="x_Customer_Name" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Customer_Name">@Html.Raw(trRequestSearch.Customer_Name.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Customer_Name" id="z_Customer_Name" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Customer_Name.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Customer_Name" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Customer_Name.InputTextType)" name="x_Customer_Name" id="x_Customer_Name" data-table="tr_request" data-field="x_Customer_Name" value="@Html.Raw(trRequestSearch.Customer_Name.EditValue)" data-page="1" size="30" maxlength="200" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Customer_Name.PlaceHolder))" data-format-pattern="@(trRequestSearch.Customer_Name.FormatPattern)"@Html.Raw(trRequestSearch.Customer_Name.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Customer_Name.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Customer_Name.Visible (end) *@
@if (trRequestSearch.SAP_Total.Visible) { // trRequestSearch.SAP_Total.Visible (begin)
    <div id="r_SAP_Total" class="row" @Html.Raw(trRequestSearch.SAP_Total.RowAttributes)>
        <label for="x_SAP_Total" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_SAP_Total">@Html.Raw(trRequestSearch.SAP_Total.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("="))
<input type="hidden" name="z_SAP_Total" id="z_SAP_Total" value="=">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.SAP_Total.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_SAP_Total" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.SAP_Total.InputTextType)" name="x_SAP_Total" id="x_SAP_Total" data-table="tr_request" data-field="x_SAP_Total" value="@Html.Raw(trRequestSearch.SAP_Total.EditValue)" data-page="1" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.SAP_Total.PlaceHolder))" data-format-pattern="@(trRequestSearch.SAP_Total.FormatPattern)"@Html.Raw(trRequestSearch.SAP_Total.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.SAP_Total.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.SAP_Total.Visible (end) *@
@if (trRequestSearch.Override_Total.Visible) { // trRequestSearch.Override_Total.Visible (begin)
    <div id="r_Override_Total" class="row" @Html.Raw(trRequestSearch.Override_Total.RowAttributes)>
        <label for="x_Override_Total" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Override_Total">@Html.Raw(trRequestSearch.Override_Total.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("="))
<input type="hidden" name="z_Override_Total" id="z_Override_Total" value="=">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Override_Total.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Override_Total" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Override_Total.InputTextType)" name="x_Override_Total" id="x_Override_Total" data-table="tr_request" data-field="x_Override_Total" value="@Html.Raw(trRequestSearch.Override_Total.EditValue)" data-page="1" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Override_Total.PlaceHolder))" data-format-pattern="@(trRequestSearch.Override_Total.FormatPattern)"@Html.Raw(trRequestSearch.Override_Total.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Override_Total.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Override_Total.Visible (end) *@
@if (trRequestSearch.Variance_Total.Visible) { // trRequestSearch.Variance_Total.Visible (begin)
    <div id="r_Variance_Total" class="row" @Html.Raw(trRequestSearch.Variance_Total.RowAttributes)>
        <label for="x_Variance_Total" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Variance_Total">@Html.Raw(trRequestSearch.Variance_Total.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("="))
<input type="hidden" name="z_Variance_Total" id="z_Variance_Total" value="=">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Variance_Total.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Variance_Total" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Variance_Total.InputTextType)" name="x_Variance_Total" id="x_Variance_Total" data-table="tr_request" data-field="x_Variance_Total" value="@Html.Raw(trRequestSearch.Variance_Total.EditValue)" data-page="1" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Variance_Total.PlaceHolder))" data-format-pattern="@(trRequestSearch.Variance_Total.FormatPattern)"@Html.Raw(trRequestSearch.Variance_Total.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Variance_Total.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Variance_Total.Visible (end) *@
@if (trRequestSearch.Variance_Percent.Visible) { // trRequestSearch.Variance_Percent.Visible (begin)
    <div id="r_Variance_Percent" class="row" @Html.Raw(trRequestSearch.Variance_Percent.RowAttributes)>
        <label for="x_Variance_Percent" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Variance_Percent">@Html.Raw(trRequestSearch.Variance_Percent.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("="))
<input type="hidden" name="z_Variance_Percent" id="z_Variance_Percent" value="=">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Variance_Percent.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Variance_Percent" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Variance_Percent.InputTextType)" name="x_Variance_Percent" id="x_Variance_Percent" data-table="tr_request" data-field="x_Variance_Percent" value="@Html.Raw(trRequestSearch.Variance_Percent.EditValue)" data-page="1" size="30" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Variance_Percent.PlaceHolder))" data-format-pattern="@(trRequestSearch.Variance_Percent.FormatPattern)"@Html.Raw(trRequestSearch.Variance_Percent.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Variance_Percent.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Variance_Percent.Visible (end) *@
@if (trRequestSearch.Notes.Visible) { // trRequestSearch.Notes.Visible (begin)
    <div id="r_Notes" class="row" @Html.Raw(trRequestSearch.Notes.RowAttributes)>
        <label for="x_Notes" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Notes">@Html.Raw(trRequestSearch.Notes.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Notes" id="z_Notes" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Notes.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Notes" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Notes.InputTextType)" name="x_Notes" id="x_Notes" data-table="tr_request" data-field="x_Notes" value="@Html.Raw(trRequestSearch.Notes.EditValue)" data-page="1" maxlength="200" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Notes.PlaceHolder))" data-format-pattern="@(trRequestSearch.Notes.FormatPattern)"@Html.Raw(trRequestSearch.Notes.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Notes.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Notes.Visible (end) *@
@if (trRequestSearch.Next_Approver.Visible) { // trRequestSearch.Next_Approver.Visible (begin)
    <div id="r_Next_Approver" class="row" @Html.Raw(trRequestSearch.Next_Approver.RowAttributes)>
        <label for="x_Next_Approver" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Next_Approver">@Html.Raw(trRequestSearch.Next_Approver.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Next_Approver" id="z_Next_Approver" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Next_Approver.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Next_Approver" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Next_Approver.InputTextType)" name="x_Next_Approver" id="x_Next_Approver" data-table="tr_request" data-field="x_Next_Approver" value="@Html.Raw(trRequestSearch.Next_Approver.EditValue)" data-page="1" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Next_Approver.PlaceHolder))" data-format-pattern="@(trRequestSearch.Next_Approver.FormatPattern)"@Html.Raw(trRequestSearch.Next_Approver.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Next_Approver.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Next_Approver.Visible (end) *@
@if (trRequestSearch.Request_Currency.Visible) { // trRequestSearch.Request_Currency.Visible (begin)
    <div id="r_Request_Currency" class="row" @Html.Raw(trRequestSearch.Request_Currency.RowAttributes)>
        <label for="x_Request_Currency" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_Currency">@Html.Raw(trRequestSearch.Request_Currency.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_Currency" id="z_Request_Currency" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_Currency.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_Currency" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_Currency.InputTextType)" name="x_Request_Currency" id="x_Request_Currency" data-table="tr_request" data-field="x_Request_Currency" value="@Html.Raw(trRequestSearch.Request_Currency.EditValue)" data-page="1" size="30" maxlength="10" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_Currency.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_Currency.FormatPattern)"@Html.Raw(trRequestSearch.Request_Currency.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_Currency.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_Currency.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(trRequestSearch.MultiPages.TabPaneClasses(2))" id="tab_tr_request2" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-search-div"><!-- page* -->
@if (trRequestSearch.Request_By.Visible) { // trRequestSearch.Request_By.Visible (begin)
    <div id="r_Request_By" class="row" @Html.Raw(trRequestSearch.Request_By.RowAttributes)>
        <label for="x_Request_By" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_By">@Html.Raw(trRequestSearch.Request_By.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_By" id="z_Request_By" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_By.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_By" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_By.InputTextType)" name="x_Request_By" id="x_Request_By" data-table="tr_request" data-field="x_Request_By" value="@Html.Raw(trRequestSearch.Request_By.EditValue)" data-page="2" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_By.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_By.FormatPattern)"@Html.Raw(trRequestSearch.Request_By.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_By.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_By.Visible (end) *@
@if (trRequestSearch.Request_By_Name.Visible) { // trRequestSearch.Request_By_Name.Visible (begin)
    <div id="r_Request_By_Name" class="row" @Html.Raw(trRequestSearch.Request_By_Name.RowAttributes)>
        <label for="x_Request_By_Name" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_By_Name">@Html.Raw(trRequestSearch.Request_By_Name.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_By_Name" id="z_Request_By_Name" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_By_Name.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_By_Name" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_By_Name.InputTextType)" name="x_Request_By_Name" id="x_Request_By_Name" data-table="tr_request" data-field="x_Request_By_Name" value="@Html.Raw(trRequestSearch.Request_By_Name.EditValue)" data-page="2" size="30" maxlength="200" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_By_Name.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_By_Name.FormatPattern)"@Html.Raw(trRequestSearch.Request_By_Name.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_By_Name.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_By_Name.Visible (end) *@
@if (trRequestSearch.Request_By_Position.Visible) { // trRequestSearch.Request_By_Position.Visible (begin)
    <div id="r_Request_By_Position" class="row" @Html.Raw(trRequestSearch.Request_By_Position.RowAttributes)>
        <label for="x_Request_By_Position" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_By_Position">@Html.Raw(trRequestSearch.Request_By_Position.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_By_Position" id="z_Request_By_Position" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_By_Position.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_By_Position" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_By_Position.InputTextType)" name="x_Request_By_Position" id="x_Request_By_Position" data-table="tr_request" data-field="x_Request_By_Position" value="@Html.Raw(trRequestSearch.Request_By_Position.EditValue)" data-page="2" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_By_Position.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_By_Position.FormatPattern)"@Html.Raw(trRequestSearch.Request_By_Position.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_By_Position.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_By_Position.Visible (end) *@
@if (trRequestSearch.Request_By_Branch.Visible) { // trRequestSearch.Request_By_Branch.Visible (begin)
    <div id="r_Request_By_Branch" class="row" @Html.Raw(trRequestSearch.Request_By_Branch.RowAttributes)>
        <label for="x_Request_By_Branch" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_By_Branch">@Html.Raw(trRequestSearch.Request_By_Branch.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_By_Branch" id="z_Request_By_Branch" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_By_Branch.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_By_Branch" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_By_Branch.InputTextType)" name="x_Request_By_Branch" id="x_Request_By_Branch" data-table="tr_request" data-field="x_Request_By_Branch" value="@Html.Raw(trRequestSearch.Request_By_Branch.EditValue)" data-page="2" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_By_Branch.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_By_Branch.FormatPattern)"@Html.Raw(trRequestSearch.Request_By_Branch.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_By_Branch.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_By_Branch.Visible (end) *@
@if (trRequestSearch.Request_By_Region.Visible) { // trRequestSearch.Request_By_Region.Visible (begin)
    <div id="r_Request_By_Region" class="row" @Html.Raw(trRequestSearch.Request_By_Region.RowAttributes)>
        <label for="x_Request_By_Region" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_By_Region">@Html.Raw(trRequestSearch.Request_By_Region.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_By_Region" id="z_Request_By_Region" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_By_Region.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_By_Region" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_By_Region.InputTextType)" name="x_Request_By_Region" id="x_Request_By_Region" data-table="tr_request" data-field="x_Request_By_Region" value="@Html.Raw(trRequestSearch.Request_By_Region.EditValue)" data-page="2" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_By_Region.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_By_Region.FormatPattern)"@Html.Raw(trRequestSearch.Request_By_Region.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_By_Region.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_By_Region.Visible (end) *@
@if (trRequestSearch.Request_Industry.Visible) { // trRequestSearch.Request_Industry.Visible (begin)
    <div id="r_Request_Industry" class="row" @Html.Raw(trRequestSearch.Request_Industry.RowAttributes)>
        <label for="x_Request_Industry" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_Industry">@Html.Raw(trRequestSearch.Request_Industry.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_Industry" id="z_Request_Industry" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_Industry.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_Industry" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_Industry.InputTextType)" name="x_Request_Industry" id="x_Request_Industry" data-table="tr_request" data-field="x_Request_Industry" value="@Html.Raw(trRequestSearch.Request_Industry.EditValue)" data-page="2" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_Industry.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_Industry.FormatPattern)"@Html.Raw(trRequestSearch.Request_Industry.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_Industry.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_Industry.Visible (end) *@
@if (trRequestSearch.Request_PIC.Visible) { // trRequestSearch.Request_PIC.Visible (begin)
    <div id="r_Request_PIC" class="row" @Html.Raw(trRequestSearch.Request_PIC.RowAttributes)>
        <label for="x_Request_PIC" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_PIC">@Html.Raw(trRequestSearch.Request_PIC.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_PIC" id="z_Request_PIC" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_PIC.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_PIC" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Request_PIC.InputTextType)" name="x_Request_PIC" id="x_Request_PIC" data-table="tr_request" data-field="x_Request_PIC" value="@Html.Raw(trRequestSearch.Request_PIC.EditValue)" data-page="2" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Request_PIC.PlaceHolder))" data-format-pattern="@(trRequestSearch.Request_PIC.FormatPattern)"@Html.Raw(trRequestSearch.Request_PIC.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_PIC.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_PIC.Visible (end) *@
@if (trRequestSearch.Request_Status.Visible) { // trRequestSearch.Request_Status.Visible (begin)
    <div id="r_Request_Status" class="row" @Html.Raw(trRequestSearch.Request_Status.RowAttributes)>
        <label for="x_Request_Status" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Request_Status">@Html.Raw(trRequestSearch.Request_Status.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Request_Status" id="z_Request_Status" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Request_Status.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Request_Status" class="ew-search-field ew-search-field-single">
    <select
        id="x_Request_Status"
        name="x_Request_Status"
        class="form-select ew-select@(trRequestSearch.Request_Status.IsInvalidClass)"
        data-select2-id="ftr_requestsearch_x_Request_Status"
        data-table="tr_request"
        data-field="x_Request_Status"
        data-page="2"
        data-value-separator="@(trRequestSearch.Request_Status.DisplayValueSeparatorAttribute)"
        data-placeholder="@(HtmlEncode(trRequestSearch.Request_Status.PlaceHolder))"
        @Html.Raw(trRequestSearch.Request_Status.EditAttributes)>
        @(trRequestSearch.Request_Status.SelectOptionListHtml("x_Request_Status"))
    </select>
    <div class="invalid-feedback">@Html.Raw(trRequestSearch.Request_Status.GetErrorMessage(false))</div>
<script>
loadjs.ready("ftr_requestsearch", function() {
    var options = { name: "x_Request_Status", selectId: "ftr_requestsearch_x_Request_Status" },
        el = document.querySelector("select[data-select2-id='" + options.selectId + "']");
    if (!el)
        return;
    options.closeOnSelect = !options.multiple;
    options.dropdownParent = el.closest("#ew-modal-dialog, #ew-add-opt-dialog");
    if (ftr_requestsearch.lists.Request_Status?.lookupOptions.length) {
        options.data = { id: "x_Request_Status", form: "ftr_requestsearch" };
    } else {
        options.ajax = { id: "x_Request_Status", form: "ftr_requestsearch", limit: ew.LOOKUP_PAGE_SIZE };
    }
    options.minimumResultsForSearch = Infinity;
    options = Object.assign({}, ew.selectOptions, options, ew.vars.tables.tr_request.fields.Request_Status.selectOptions);
    ew.createSelect(options);
});
</script>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Request_Status.Visible (end) *@
@if (trRequestSearch.List_Approver.Visible) { // trRequestSearch.List_Approver.Visible (begin)
    <div id="r_List_Approver" class="row" @Html.Raw(trRequestSearch.List_Approver.RowAttributes)>
        <label for="x_List_Approver" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_List_Approver">@Html.Raw(trRequestSearch.List_Approver.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_List_Approver" id="z_List_Approver" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.List_Approver.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_List_Approver" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.List_Approver.InputTextType)" name="x_List_Approver" id="x_List_Approver" data-table="tr_request" data-field="x_List_Approver" value="@Html.Raw(trRequestSearch.List_Approver.EditValue)" data-page="2" size="30" maxlength="500" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.List_Approver.PlaceHolder))" data-format-pattern="@(trRequestSearch.List_Approver.FormatPattern)"@Html.Raw(trRequestSearch.List_Approver.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.List_Approver.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.List_Approver.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
        <div class="@(trRequestSearch.MultiPages.TabPaneClasses(3))" id="tab_tr_request3" role="tabpanel"><!-- multi-page .tab-pane -->
<div class="ew-search-div"><!-- page* -->
@if (trRequestSearch.Last_Update_By.Visible) { // trRequestSearch.Last_Update_By.Visible (begin)
    <div id="r_Last_Update_By" class="row" @Html.Raw(trRequestSearch.Last_Update_By.RowAttributes)>
        <label for="x_Last_Update_By" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Last_Update_By">@Html.Raw(trRequestSearch.Last_Update_By.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Last_Update_By" id="z_Last_Update_By" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Last_Update_By.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Last_Update_By" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Last_Update_By.InputTextType)" name="x_Last_Update_By" id="x_Last_Update_By" data-table="tr_request" data-field="x_Last_Update_By" value="@Html.Raw(trRequestSearch.Last_Update_By.EditValue)" data-page="3" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Last_Update_By.PlaceHolder))" data-format-pattern="@(trRequestSearch.Last_Update_By.FormatPattern)"@Html.Raw(trRequestSearch.Last_Update_By.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Last_Update_By.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Last_Update_By.Visible (end) *@
@if (trRequestSearch.Created_By.Visible) { // trRequestSearch.Created_By.Visible (begin)
    <div id="r_Created_By" class="row" @Html.Raw(trRequestSearch.Created_By.RowAttributes)>
        <label for="x_Created_By" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Created_By">@Html.Raw(trRequestSearch.Created_By.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("LIKE"))
<input type="hidden" name="z_Created_By" id="z_Created_By" value="LIKE">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Created_By.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Created_By" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Created_By.InputTextType)" name="x_Created_By" id="x_Created_By" data-table="tr_request" data-field="x_Created_By" value="@Html.Raw(trRequestSearch.Created_By.EditValue)" data-page="3" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Created_By.PlaceHolder))" data-format-pattern="@(trRequestSearch.Created_By.FormatPattern)"@Html.Raw(trRequestSearch.Created_By.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Created_By.GetErrorMessage(false))</div>
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Created_By.Visible (end) *@
@if (trRequestSearch.Created_Date.Visible) { // trRequestSearch.Created_Date.Visible (begin)
    <div id="r_Created_Date" class="row" @Html.Raw(trRequestSearch.Created_Date.RowAttributes)>
        <label for="x_Created_Date" class="@(trRequestSearch.LeftColumnClass)"><span id="elh_tr_request_Created_Date">@Html.Raw(trRequestSearch.Created_Date.Caption)</span>
        <span class="ew-search-operator">
@Html.Raw(Language.Phrase("="))
<input type="hidden" name="z_Created_Date" id="z_Created_Date" value="=">
</span>
        </label>
        <div class="@(trRequestSearch.RightColumnClass)">
            <div @Html.Raw(trRequestSearch.Created_Date.CellAttributes)>
                <div class="d-flex align-items-start">
                <span id="el_tr_request_Created_Date" class="ew-search-field ew-search-field-single">
<input type="@(trRequestSearch.Created_Date.InputTextType)" name="x_Created_Date" id="x_Created_Date" data-table="tr_request" data-field="x_Created_Date" value="@Html.Raw(trRequestSearch.Created_Date.EditValue)" data-page="3" placeholder="@Html.Raw(HtmlEncode(trRequestSearch.Created_Date.PlaceHolder))" data-format-pattern="@(trRequestSearch.Created_Date.FormatPattern)"@Html.Raw(trRequestSearch.Created_Date.EditAttributes)>
<div class="invalid-feedback">@Html.Raw(trRequestSearch.Created_Date.GetErrorMessage(false))</div>
@if (!trRequestSearch.Created_Date.ReadOnly && !trRequestSearch.Created_Date.Disabled && !trRequestSearch.Created_Date.EditAttrs.Is("readonly") && !trRequestSearch.Created_Date.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["ftr_requestsearch", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("ftr_requestsearch", "x_Created_Date", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
                </div>
            </div>
        </div>
    </div>
} @* trRequestSearch.Created_Date.Visible (end) *@
</div><!-- /page* -->
        </div><!-- /multi-page .tab-pane -->
    </div><!-- /multi-page tabs .tab-content -->
</div><!-- /multi-page tabs -->
</div><!-- /multi-page -->
@Html.Raw(trRequestSearch.IsModal ? Html.Raw("<template class=\"ew-modal-buttons\">") : Html.Raw("<div class=\"row ew-buttons\">"))<!-- buttons .row -->
    <div class="@(trRequestSearch.OffsetColumnClass)"><!-- buttons offset -->
        <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="ftr_requestsearch">@Html.Raw(Language.Phrase("Search"))</button>
@if (trRequestSearch.IsModal) {
        <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="ftr_requestsearch">@Html.Raw(Language.Phrase("Cancel"))</button>
} else {
        <button class="btn btn-default ew-btn" name="btn-reset" id="btn-reset" type="button" form="ftr_requestsearch" data-ew-action="reload">@Html.Raw(Language.Phrase("Reset"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(trRequestSearch.IsModal ? Html.Raw("</template>") : Html.Raw("</div>"))<!-- /buttons .row -->
</form>
@trRequestSearch.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("tr_request");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
